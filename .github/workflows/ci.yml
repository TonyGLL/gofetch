# .github/workflows/ci.yml

# Name of the GitHub Actions workflow.
name: Go CI

# Controls when the workflow will run.
on:
  # Triggers the workflow on push events but only for the "main" branch.
  push:
    branches: ['main']

  # Triggers the workflow on pull request events targeted at the "main" branch.
  pull_request:
    branches: ['main']

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This job is named "build-and-test".
  build-and-test:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # A sequence of tasks that will be executed as part of the job.
    steps:
      # 1. Checkout your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up the Go environment.
      # It reads the Go version from your project's go.mod file.
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24'
          cache: true

      # 3. Run the linter.
      # We use a dedicated action for golangci-lint. It's faster because it handles
      # caching of the linter binary and provides better annotations in pull requests.
      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

          # Optional: run only new issues in pull requests
          # only-new-issues: true

      # 4. Run the tests.
      # This command is executed using the Makefile, ensuring consistency between
      # local development and the CI environment.
      - name: Run tests
        run: make test
